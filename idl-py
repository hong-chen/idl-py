#!/Users/hoch4240/Chen/soft/python/3/bin/python

##!/usr/bin/env python3

# by Hong Chen (me@hongchen.cz)

import sys
import os
import pexpect
from prompt_toolkit import prompt, AbortAction
from prompt_toolkit.history import InMemoryHistory
from pygments.lexers import IDLLexer
from prompt_toolkit.layout.lexers import PygmentsLexer

Nargv = len(sys.argv)

if Nargv == 1:

    os.system('idl')

elif Nargv == 2:

    fname = sys.argv[1]
    if not os.path.isfile(fname):
        exit('Error [idl-py]: file does not exist.')

    if fname.split('.')[-1] == 'pro':
        patterns = ['pro', 'function']

        f = open(fname, 'r')
        lines = f.readlines()
        lines_new = []
        for i in range(len(lines)):
            line  = lines[i].lower().strip()

            if any(line[:len(pattern)] == pattern for pattern in patterns):
                if line[-1] == '$':
                    line_new = line[:-1]
                    j = i+1
                    while lines[j].lower().strip()[-1] == '$':
                        line_new = line_new + lines[j].lower().strip()[:-1]
                        j += 1
                    line_new = line_new + lines[j].lower().strip()[:-1]
                else:
                    line_new = line

                for pattern in patterns:
                    line_new = line_new.replace(pattern, '').strip()

                words    = line_new.replace(' ', '').split(',')
                words[0] = words[0].upper()
                line_new = ', '.join(words)
                lines_new.append(line_new)

        f.close()

        idl = pexpect.spawnu('idl')
        idl.expect('IDL> ', timeout=10)
        print(idl.before.rstrip('\n'))
        command = '.r %s' % fname
        idl.sendline(command)
        idl.expect('IDL> ', timeout=10)
        message = 'IDL-PY> ' + idl.before
        print(message)

        print('+ How to run')
        for line_new in lines_new:
            print(line_new)
        print('-')

        history = InMemoryHistory()
        while True:

            try:

                command = prompt('IDL-PY> ', lexer=PygmentsLexer(IDLLexer), history=history, on_abort=AbortAction.RETRY)

                if command == 'exit':

                    exit('\nGoodbye.')

                else:

                    idl.sendline(command)
                    idl.expect('IDL> ', timeout=10)
                    message = idl.before[len(command):].strip()
                    if len(message) > 0:
                        print(message)

            except EOFError:

                exit('Error [idl-py]: Exiting...')

    else:

        exit('Error [idl-py]: wrong file type.')

else:
    exit('Error [idl-py]: too many arguments.')
